while (True):
  # 68 "Programme de robot"
  global safe_mode=0

  set_configurable_digital_out(0, False)
  set_configurable_digital_out(1, False)

  while (get_configurable_digital_in(4) ==   True    or  get_configurable_digital_in(5) ==   True  ):

    sync()
    # 94 "'clingottement pour signifier qu'il y  un defaut sur un des carters '"
    set_standard_digital_out(4, False)
    set_configurable_digital_out(6, False)
    sleep(0.5)
    set_standard_digital_out(4, True)
    set_configurable_digital_out(6, True)
    sleep(0.5)
    sync()
  end

  set_configurable_digital_out(6, False)
  set_standard_digital_out(4, False)
  sleep(2.0)
  #movel(pose_add(get_target_tcp_pose(), pose_sub(PointPassage_12_to_p, PointPassage_12_from_p)), a=0.01, v=2.0E-4)
  global angle_base= get_actual_joint_positions ()
  if (angle_base[0]  <= 0.7):
    if (angle_base[0] >= 1.6):
      # 116 "Départ"        A CHANGER PAR UNE POSTION ENREGISTREE
      movej(pose_depart, a=accelerationHorsSoudure, v=vitesseHorsSoudure)
    else:
      if (angle_base[0]>1.6):
        movej(Point_init_D, a=accelerationHorsSoudure, v=vitesseHorsSoudure)
        movej(Point_avt_initD, a=accelerationHorsSoudure, v=vitesseHorsSoudure)
      else:
        if (angle_base[0]<0.7):
          movej(Point_init_G, a=accelerationHorsSoudure, v=vitesseHorsSoudure)
        end
      end
    end
  else:
    # 124 "SinonSi angle_base[0]>1.6"
    if (angle_base[0]>1.6):

      movej(Point_init_D, a=accelerationHorsSoudure, v=vitesseHorsSoudure)
      movej(Point_avt_initD, a=accelerationHorsSoudure, v=vitesseHorsSoudure)
    else:
      if (angle_base[0]<0.7):
        movej(Point_init_G, a=accelerationHorsSoudure, v=vitesseHorsSoudure)
      end
    end
  end
  # 131 "Départ"             A CHANGER PAR UNE POSTION ENREGISTREE
  movej(pose_depart, a=accelerationHorsSoudure, v=vitesseHorsSoudure)
  global angle_base= get_actual_joint_positions ()
  # 'mode config'
  if (get_configurable_digital_in(7)  ==   False    and  get_standard_digital_in(7)  ==   False  ):
    if ((config_g  ==  1)   and   (config_d  ==  1)):
      pop_up_config_g_et_d()
    else:
      if ((config_g  == 1)):
        pop_up_config_g()
      else:
        if (config_d  ==  1):
          pop_up_config_d()
        else:
          if ((config_g  ==  0)  and  (config_d  ==  0)):
            pop_up_config()
          end
        end
      end
    end
    global boucle=1
    while ((get_configurable_digital_in(7)  ==   False  )  and  (boucle  ==  1)   and  (get_standard_digital_in(7) ==   False  )):
      thread Thread_while_145():
        while (True):
          set_standard_digital_out(5, True)
          set_standard_digital_out(6, False)
          sleep(0.5)
          set_standard_digital_out(5, False)
          set_standard_digital_out(6, True)
          sleep(0.5)
          sync()
        end
      end
      if (get_standard_digital_in(3) ==   False    and  get_standard_digital_in(2) ==   False    and  get_configurable_digital_in(add_bp_ConfigReglage)  ==    False    and  get_standard_digital_in(add_bp_ConfigReglage) ==   False  ):
        global thread_handler_145=run Thread_while_145()
        while (get_standard_digital_in(3) ==   False    and  get_standard_digital_in(2) ==   False    and  get_configurable_digital_in(add_bp_ConfigReglage)  ==    False    and  get_standard_digital_in(add_bp_ConfigReglage) ==   False  ):
          sync()
        end
        kill thread_handler_145
      end
      if (get_standard_digital_in(2)  ==   True  ):
        set_standard_digital_out(5, True)
        set_standard_digital_out(6, False)
        movej(Point_init_G, a=accelerationHorsSoudure, v=vitesseHorsSoudure, r=0.006)
        movej(Point_Attente_G, a=accelerationHorsSoudure, v=vitesseHorsSoudure, r=0.006)
        movej(Point_config_g, a=accelerationHorsSoudure, v=vitesseHorsSoudure)
        global led_cobot=1
        fun_config_g()
        global led_cobot=0
        fun_valid_config_g()
        movej(Point_Attente_G, a=accelerationHorsSoudure, v=vitesseHorsSoudure, r=0.006)
        movej(Point_init_G, a=accelerationHorsSoudure, v=vitesseHorsSoudure, r=0.006)
        # 170 "Départ"         A CHANGER PAR UNE POSTION ENREGISTREE
        movej(pose_depart, a=accelerationHorsSoudure, v=vitesseHorsSoudure)
      end

      if (get_standard_digital_in(3)  ==   True  ):
        set_standard_digital_out(6, True)
        set_standard_digital_out(5, False)
        movej(Point_avt_initD, a=accelerationHorsSoudure, v=vitesseHorsSoudure, r=0.006)
        movej(Point_init_D, a=accelerationHorsSoudure, v=vitesseHorsSoudure)
        movej(Point_Attente_D, a=accelerationHorsSoudure, v=vitesseHorsSoudure, r=0.006)
        movej(Point_config_d, a=accelerationHorsSoudure, v=vitesseHorsSoudure)
        global led_cobot=1
        fun_config_d()
        global led_cobot=0
        fun_valid_config_d()
        movej(Point_Attente_D, a=accelerationHorsSoudure, v=vitesseHorsSoudure, r=0.006)
        movej(Point_init_D, a=accelerationHorsSoudure, v=vitesseHorsSoudure, r=0.006)
        movej(Point_avt_initD, a=accelerationHorsSoudure, v=vitesseHorsSoudure, r=0.006)
        # 190 "Départ"         A CHANGER PAR UNE POSTION ENREGISTREE
        movej(pose_depart, a=accelerationHorsSoudure, v=vitesseHorsSoudure)
      end
    end
  end
  # '"Reglage"'

  if (get_configurable_digital_in(add_bp_ConfigReglage)  ==   False    and  get_standard_digital_in(add_bp_ConfigReglage)  ==   True  ):
    if ((config_g  ==  1)   and   (config_d  ==  1)):
      pop_up_reg_gd()
      global boucle=1
    else:
      if (config_g  ==  1):
        pop_up_reg_gd()
        global boucle=1
      else:
        if (config_d  ==  1):
          pop_up_reg_d()
          global boucle=1
        else:
          close_popup()
          while (get_standard_digital_in(add_bp_ConfigReglage)  ==   True  ):
            popup("Aucune configuration n'est actuellement detectée.", "Erreur", False, True, blocking=True)
          end
        end
      end
    end
    global boucle=1
    while ((get_configurable_digital_in(add_bp_ConfigReglage)  ==   False  )  and  (boucle  ==  1)   and  (get_standard_digital_in(add_bp_ConfigReglage) ==   True  )):
      thread Thread_while_208():
        while (True):
          if (config_g  ==  1):
            set_standard_digital_out(5, True)
          end
          if (config_d  ==  1):
            set_standard_digital_out(6, True)
          end
          sleep(0.5)
          set_standard_digital_out(5, False)
          set_standard_digital_out(6, False)
          sleep(0.5)
        end
      end
      if (get_standard_digital_in(3) ==   False    and  get_standard_digital_in(2) ==   False    and  get_configurable_digital_in(7)  ==    False    and  get_standard_digital_in(7)  ==   True  ):
        global thread_handler_208=run Thread_while_208()
        while (get_standard_digital_in(3) ==   False    and  get_standard_digital_in(2) ==   False    and  get_configurable_digital_in(7)  ==    False    and  get_standard_digital_in(7)  ==   True  ):
          sync()
        end
        kill thread_handler_208
      end
      if (get_standard_digital_in(2)  ==   True  ):
        global safe_mode=1
        set_standard_digital_out(5, True)
        set_standard_digital_out(6, False)
        movej(Point_init_G, a=accelerationHorsSoudure, v=vitesseHorsSoudure, r=0.006)
        movej(Point_Attente_G, a=accelerationHorsSoudure, v=vitesseHorsSoudure, r=0.006)
        movej(pose_inter_g, a=accelerationHorsSoudure, v=vitesseHorsSoudure)
        global led_cobot=1
        fun_Pas_A_Pas_g()
        global led_cobot=0
        global safe_mode=0
        global boucle=0
      end
      if (get_standard_digital_in(3)  ==   True  ):
        global safe_mode=1
        set_standard_digital_out(6, True)
        set_standard_digital_out(5, False)
        movej(Point_avt_initD, a=accelerationHorsSoudure, v=vitesseHorsSoudure, r=0.006)
        movej(Point_init_D, a=accelerationHorsSoudure, v=vitesseHorsSoudure, r=0.006)
        movej(pose_inter_d, a=accelerationHorsSoudure, v=vitesseHorsSoudure)
        global led_cobot=1
        fun_Pas_A_Pas_d()
        global led_cobot=0
        global safe_mode=0
        global boucle=0
      end
    end
  end
  # 'mode execution'
  if (get_configurable_digital_in(add_bp_ConfigReglage)  ==   True  ):
    if ((config_g  ==  1)   and   (config_d  ==  1)):
      pop_up_exe()
      global boucle=1
    else:
      if (config_g  ==  1):
        pop_up_exe_g()
        global boucle=1
      else:
        if (config_d  ==  1):
          pop_up_exe_d()
          global boucle=1
        else:
          close_popup()
          while (get_configurable_digital_in(add_bp_ConfigReglage)  ==   True  ):
            popup("Aucune programmation n'est actuellement detectée, veillez à programmer une pièce avant de vouloir l'éxécuter.", "Erreur", False, True, blocking=True)
          end
        end
      end
    end
    while (( get_configurable_digital_in(add_bp_ConfigReglage)  ==   True  )   and  (boucle  ==  1)):
      thread Thread_while_259():
        while (True):
          if (config_g  ==  1):
            set_standard_digital_out(5, True)
          end
          if (config_d  ==  1):
            set_standard_digital_out(6, True)
          end
          sleep(0.5)
          set_standard_digital_out(5, False)
          set_standard_digital_out(6, False)
          sleep(0.5)
        end
      end
      if (get_standard_digital_in(3) ==   False    and  get_standard_digital_in(2) ==   False    and  get_configurable_digital_in(add_bp_ConfigReglage) ==   True  ):
        global thread_handler_259=run Thread_while_259()
        while (get_standard_digital_in(3) ==   False    and  get_standard_digital_in(2) ==   False    and  get_configurable_digital_in(add_bp_ConfigReglage) ==   True  ):
          sync()
        end
        kill thread_handler_259
      end
      if ((get_standard_digital_in(2)  ==   True  )  and  (config_g  ==   True  )):
        global boucle_g=1
        while (boucle_g  ==  1):
          set_configurable_digital_out(0, True)
          set_standard_digital_out(5, True)
          set_standard_digital_out(6, False)
          sleep(0.25)
          set_standard_digital_out(5, False)
          sleep(0.25)
          if (get_configurable_digital_in(4)  ==    False  ):
            set_standard_digital_out(5, True)
            if (get_configurable_digital_in(4)  ==    False  ):
              close_popup()
              while (get_configurable_digital_in(4) == False):
                sync()
              end
            end
          end
          if (get_configurable_digital_in(4)  ==    True  ):
            global secu_g=1
            set_standard_digital_out(5, True)
            movej(Point_init_G, a=accelerationHorsSoudure, v=vitesseHorsSoudure, r=0.006)
            fun_execution_g()
            movej(Point_Attente_G, a=accelerationHorsSoudure, v=vitesseHorsSoudure, r=0.006)
            movej(Point_init_G, a=accelerationHorsSoudure, v=vitesseHorsSoudure, r=0.006)
            # 294 "Départ"         A CHANGER PAR UNE POSTION ENREGISTREE
            movej(pose_depart, a=accelerationHorsSoudure, v=vitesseHorsSoudure)
            set_configurable_digital_out(0, False)
            global secu_g=0
            global boucle_g=0
          end
        end
        global boucle=0
      else:
        if ((get_standard_digital_in(2)  ==   True  )  and  (config_g  ==   False  )):
          close_popup()
          popup("Aucune programmation n'est actuellement detectée sur la table gauche, veillez à programmer une pièce avant de vouloir l'éxécuter.", "Erreur", False, True, blocking=True)
          global boucle=0
        end
      end
      if ((get_standard_digital_in(3)  ==   True  )  and  (config_d  ==   True  )):
        global boucle_d=1
        pop_up_deb_exe_d()
        while (boucle_d  ==  1):
          set_configurable_digital_out(1, True)
          set_standard_digital_out(5, False)
          set_standard_digital_out(6, True)
          sleep(0.25)
          set_standard_digital_out(6, False)
          sleep(0.25)
          if (get_configurable_digital_in(5)  ==    False  ):
            set_standard_digital_out(6, True)
            sleep(6.0)
            if (get_configurable_digital_in(5)  ==    False  ):
              close_popup()
              while (get_configurable_digital_in(5) == False):
                sync()
              end
            end
          end
          if (get_configurable_digital_in(5)  ==    True  ):
            global secu_d=1
            set_standard_digital_out(6, True)
            movej(Point_avt_initD, a=accelerationHorsSoudure, v=vitesseHorsSoudure)
            fun_execution_d()
            set_configurable_digital_out(1, False)
            global secu_d=0
            global boucle_d=0
          end
        end
        global boucle=0
      else:
        if ((get_standard_digital_in(3)  ==   True  )  and  (config_d  ==   False  )):
          close_popup()
          popup("Aucune programmation n'est actuellement detectée sur la table droite, veillez à programmer une pièce avant de vouloir l'éxécuter.", "Erreur", False, True, blocking=True)
          global boucle=0
        end
      end
    end
  end
end
end